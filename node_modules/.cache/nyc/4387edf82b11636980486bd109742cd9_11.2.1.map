{"version":3,"sources":["users.js"],"names":["isValidEmail","mail","test","checkValidUserDetails","req","res","next","body","firstname","lastname","username","email","password","confirmpassword","matchingDetails","reqBody","undefinedBody","isNull","isWhiteSpace","i","length","undefined","replace","status","send","error","Number","isInteger","parseFloat"],"mappings":";;;;;AAAA,IAAMA,eAAe,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,MAAI,iDAAiDC,IAAjD,CAAsDD,IAAtD,CAAJ,EAAiE;AAC/D,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD,CALD;;AAOA,IAAME,wBAAwB,SAAxBA,qBAAwB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,kBAQ5CF,IAAIG,IARwC;AAAA,MAE9CC,SAF8C,aAE9CA,SAF8C;AAAA,MAG9CC,QAH8C,aAG9CA,QAH8C;AAAA,MAI9CC,QAJ8C,aAI9CA,QAJ8C;AAAA,MAK9CC,KAL8C,aAK9CA,KAL8C;AAAA,MAM9CC,QAN8C,aAM9CA,QAN8C;AAAA,MAO9CC,eAP8C,aAO9CA,eAP8C;;AAShD,MAAMC,kBAAkB;AACtB,OAAG,WADmB;AAEtB,OAAG,UAFmB;AAGtB,OAAG,UAHmB;AAItB,OAAG,OAJmB;AAKtB,OAAG,UALmB;AAMtB,OAAG;AANmB,GAAxB;AAQA,MAAMC,UAAU,CAACP,SAAD,EAAYC,QAAZ,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiDC,eAAjD,CAAhB;AACA,MAAIG,sBAAJ;AACA,MAAIC,SAAS,KAAb;AACA,MAAIC,eAAe,KAAnB;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,QAAQK,MAA5B,EAAoCD,KAAK,CAAzC,EAA4C;AAC1C,QAAIJ,QAAQI,CAAR,MAAeE,SAAnB,EAA8B;AAC5BL,sBAAgBF,gBAAgBK,CAAhB,CAAhB;AACD;AACD,QAAIJ,QAAQI,CAAR,MAAe,EAAnB,EAAuB;AACrBF,eAAS,IAAT;AACD;AACD,QAAIF,QAAQI,CAAR,EAAWG,OAAX,CAAmB,KAAnB,EAA0B,EAA1B,EAA8BF,MAA9B,KAAyC,CAA7C,EAAgD;AAC9CF,qBAAe,IAAf;AACD;AACF;AACD,MAAIF,aAAJ,EAAmB;AACjB,WAAOX,IAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,yBAAuBT,aAAzB,EAArB,CAAP;AACD;AACD,MAAI,CAAChB,YAAL,EAAmB;AACjB,WAAOK,IAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,4BAAT,EAArB,CAAP;AACD;AACD,MAAIR,MAAJ,EAAY;AACV,WAAOZ,IAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,gCAAT,EAArB,CAAP;AACD;AACD,MAAIP,YAAJ,EAAkB;AAChB,WAAOb,IAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,8CAAT,EAArB,CAAP;AACD;AACD,MAAI,CAACT,aAAD,IAAkBU,OAAOC,SAAP,CAAiBC,WAAWpB,aAAaC,QAAb,IAAyBC,QAApC,CAAjB,CAAtB,EAAuF;AACrF,WAAOL,IAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kCAAT,EAArB,CAAP;AACD,GAFD,MAEO;AACLnB;AACD;AACF,CAjDD;;kBAmDe;AACbH;AADa,C","file":"users.js","sourceRoot":"C:/Users/efosa/Documents/More-Recipes/Server/middlewares","sourcesContent":["const isValidEmail = (mail) => {\r\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([ \\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst checkValidUserDetails = (req, res, next) => {\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    username,\r\n    email,\r\n    password,\r\n    confirmpassword,\r\n  } = req.body;\r\n  const matchingDetails = {\r\n    0: 'firstname',\r\n    1: 'lastname',\r\n    2: 'username',\r\n    3: 'email',\r\n    4: 'password',\r\n    5: 'confirmpassword',\r\n    };\r\n  const reqBody = [firstname, lastname, username, email, password, confirmpassword];\r\n  let undefinedBody;\r\n  let isNull = false;\r\n  let isWhiteSpace = false;\r\n  for (let i = 0; i < reqBody.length; i += 1) {\r\n    if (reqBody[i] === undefined) {\r\n      undefinedBody = matchingDetails[i];\r\n    }\r\n    if (reqBody[i] === '') {\r\n      isNull = true;\r\n    }\r\n    if (reqBody[i].replace(/\\s/g, '').length === 0) {\r\n      isWhiteSpace = true;\r\n    }\r\n  }\r\n  if (undefinedBody) {\r\n    return res.status(400).send({ error: `Please input ${undefinedBody}` });\r\n  }\r\n  if (!isValidEmail) {\r\n    return res.status(400).send({ error: 'Please enter a valid email' });\r\n  }\r\n  if (isNull) {\r\n    return res.status(400).send({ error: 'An input field cannot be blank' });\r\n  }\r\n  if (isWhiteSpace) {\r\n    return res.status(400).send({ error: 'Input field cannot contain only white spaces' });\r\n  }\r\n  if (!undefinedBody && Number.isInteger(parseFloat(firstname || lastname || username))) {\r\n    return res.status(400).send({ error: 'Your names cannot be digits only' });\r\n  } else {\r\n    next();\r\n  }\r\n};\r\n\r\nexport default {\r\n  checkValidUserDetails,\r\n};\r\n"]}