{"version":3,"sources":["index.js"],"names":["basename","module","filename","env","process","NODE_ENV","config","require","db","sequelize","use_env_variable","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","Sequelize"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,eAAKA,QAAL,CAAcC,OAAOC,QAArB,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AAEA,IAAMC,SAASC,QAAQ,uBAAR,EAAiCJ,GAAjC,CAAf;;AAEA,IAAMK,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIH,OAAOI,gBAAX,EAA6B;AAC3BD,cAAY,wBAAcL,QAAQD,GAAR,CAAYG,OAAOI,gBAAnB,CAAd,CAAZ;AACD,CAFD,MAEO;AACLD,cAAY,wBAAcH,OAAOK,QAArB,EAA+BL,OAAOM,QAAtC,EAAgDN,OAAOO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAED,aACGQ,WADH,CACeC,SADf,EAEGC,MAFH,CAEU;AAAA,SAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA4BD,SAASjB,QAArC,IAAmDiB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA9E;AAAA,CAFV,EAGGC,OAHH,CAGW,UAACH,IAAD,EAAU;AACjB,MAAMI,QAAQZ,UAAUa,MAAV,CAAiB,eAAKC,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAT,KAAGa,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CANH;;AAQAI,OAAOC,IAAP,CAAYlB,EAAZ,EAAgBY,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACrC,MAAInB,GAAGmB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BpB,OAAGmB,SAAH,EAAcC,SAAd,CAAwBpB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGqB,SAAH;;kBAEerB,E","file":"index.js","sourceRoot":"C:/Users/efosa/Documents/More-Recipes/Server/db/models","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport Sequelize from 'sequelize';\r\n\r\nconst basename = path.basename(module.filename);\r\nconst env = process.env.NODE_ENV || 'development';\r\n\r\nconst config = require('../config/config.json')[env];\r\n\r\nconst db = {};\r\n\r\nlet sequelize;\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable]);\r\n} else {\r\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\r\n}\r\n\r\nfs\r\n  .readdirSync(__dirname)\r\n  .filter(file => file.indexOf('.') !== 0 && (file !== basename) && (file.slice(-3) === '.js'))\r\n  .forEach((file) => {\r\n    const model = sequelize.import(path.join(__dirname, file));\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach((modelName) => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\n\r\nexport default db;\r\n"]}